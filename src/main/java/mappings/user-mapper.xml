<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.active.common.mapper.UserMapper">
	<!--mybatis ehcache缓存配置 -->
	<!-- 以下两个<cache>标签二选一,第一个可以输出日志,第二个不输出日志 <cache type="org.mybatis.caches.ehcache.LoggingEhcache" 
		/> -->
	<!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache"/> -->
	<!-- 以下与实体类的中字段一致 -->
	<sql id="selectId">
		id,
		userName,
		accountName,
		(select group_concat(name) from ly_role
		where ly_role.id
		in (SELECT roleId FROM ly_user_role WHERE
		userId=ly_user.id) ) roleName,
		(select group_concat(name) from ly_group
		where ly_group.id
		in (SELECT groupId FROM ly_user_group WHERE
		userId=ly_user.id )) groupName,
		password,
		description,
		locked,
		credentialsSalt,
		createTime
	</sql>

	<select id="findUserPage" resultType="com.active.common.entity.UserFormMap">
		SELECT id,userName,accountName,roleName,groupName,password,
		description,
		locked,
		credentialsSalt,
		createTime FROM (
		select
		<include refid="selectId" />
		from ly_user) t
		where 1 = 1
		<if test="accountName != null and accountName != ''">
		and accountName like '%${accountName}%'
		</if>
		<if test="groupName != null and groupName != ''">
			and groupName like '%${groupName}%'
		</if>
		<if test="roleName != null and roleName != ''">
			and roleName='simple'
		</if>
	</select>


	<select id="findUserName" resultType="com.active.common.entity.UserFormMap">
		select id,userName,accountName
		from ly_user
		where  id = #{id}

	</select>

	<select id="findUserAllInfo" resultType="com.active.common.entity.UserFormMap">
		SELECT userName,groupKey,roleKey from (
		SELECT userName from ly_user WHERE id=#{id} ) as a JOIN (
		SELECT groupKey from ly_group WHERE id in (SELECT groupId from ly_user_group WHERE userId=#{id}) ) as b JOIN (
		SELECT roleKey from ly_role WHERE id in (SELECT roleId from ly_user_role WHERE userId=#{id}) ) as c ON 1=1
	</select>

	<select id="getUserPost" resultType="com.active.common.entity.UserFormMap">
		SELECT userName,accountName,postPicture,(select group_concat(roleKey) from ly_role
		where ly_role.id
		in (SELECT roleId FROM ly_user_role WHERE
		userId=ly_user.id) ) roleKey FROM ly_user WHERE id=#{id}
	</select>

	<select id="findUser" resultType="com.active.common.entity.UserFormMap">
		SELECT
		id,
		userName,
		accountName,
		(select group_concat(name) from ly_role
		where ly_role.id
		in (SELECT roleId FROM ly_user_role WHERE
		userId=ly_user.id) ) roleName,
		(select group_concat(name) from ly_group
		where ly_group.id
		in (SELECT groupId FROM ly_user_group WHERE
		userId=ly_user.id )) groupName,
		password,
		credentialsSalt
        FROM ly_user
		<if test="accountName != null and accountName != ''">
        WHERE accountName=#{accountName}
		</if>
		<if test="password != null and password != ''">
			AND password=#{password}
		</if>
	</select>

	<select id="findUserById" resultType="com.active.common.entity.UserFormMap">
		SELECT
		id,
		userName,
		accountName,
		(select group_concat(name) from ly_role
		where ly_role.id
		in (SELECT roleId FROM ly_user_role WHERE
		userId=ly_user.id) ) roleName,
		(select group_concat(name) from ly_group
		where ly_group.id
		in (SELECT groupId FROM ly_user_group WHERE
		userId=ly_user.id )) groupName,
		password,
		credentialsSalt
		FROM ly_user
		WHERE id=#{id}
	</select>

	<update id="updateUserPassword" parameterType="com.active.common.entity.UserFormMap">
		UPDATE ly_user SET password=#{password},credentialsSalt=#{credentialsSalt}
		WHERE accountName=#{accountName}
	</update>

</mapper>